---
name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  repository_dispatch:
    types: rebuild
  workflow_dispatch:
    inputs:
      git-ref:
        required: false

jobs:
  distros:
    name: "Container ${{ matrix.distro }}"
    runs-on: "ubuntu-latest"
    strategy:
      fail-fast: false
      matrix:
        distro: [
          "alpine",
          "archlinux",
          "centos7", "centos8",
          "debian-buster-ca-certificates", "debian-buster", "debian-testing", "debian-testing-ca-certificates",
          "fedora-32", "fedora-33", "fedora-34", "fedora-rawhide",
          "gentoo",
          "linuxmint-193",
          "opensuse-tumbleweed",
          "openwrt",
          "rhel8-ubi",
          "ubuntu-xenial-ca-certificates", "ubuntu-bionic-ca-certificates", "ubuntu-focal-ca-certificates", "ubuntu-focal", "ubuntu-groovy"
        ]
    steps:
      - name: checkout
        uses: "actions/checkout@v2"
      - name: "Build container ${{ matrix.distro }}"
        run: |
           set -xe
           docker build tools -f Dockerfile.${{ matrix.distro }} -t truststore:${{ matrix.distro }}
      - name: "Run container ${{ matrix.distro }}"
        run: |
          set -xe
          docker run truststore:${{ matrix.distro }} | tee result-${{ matrix.distro }}.json
      - uses: actions/upload-artifact@v2
        with:
          name: result
          path: result-${{ matrix.distro }}.json
          if-no-files-found: error

  freebsd:
    runs-on: macos-latest
    name: FreeBSD with ca_root_nss
    strategy:
      fail-fast: false
    steps:
      - name: checkout
        uses: "actions/checkout@v2"
      - name: Run test in FreeBSD VM
        uses: vmactions/freebsd-vm@v0.0.8
        with:
          usesh: true
          run: |
            set -ex

            export DISTRO_TRUSTSTORE_NAME="FreeBSD pkg python3"
            pkg install -y python3
            python3 ./tools/check_openssl_conf.py > result-freebsd.json

            export DISTRO_TRUSTSTORE_NAME="FreeBSD pkg python3 ca_root_nss"
            pkg install -y ca_root_nss
            python3 ./tools/check_openssl_conf.py > result-freebsd-ca_root_nss.json
      - name: Show results
        run: cat result-*.json
      - uses: actions/upload-artifact@v2
        with:
          name: result
          path: result-*.json
          if-no-files-found: error

  mac_win:
    name: "OS ${{ matrix.os }} with Python ${{ matrix.python-version }}"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest]
        python-version: [3.8]
    steps:
      - name: checkout
        uses: "actions/checkout@v2"
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run script
        env:
          DISTRO_TRUSTSTORE_NAME: ${{ matrix.os }}
        run: python tools/check_openssl_conf.py | tee result-os-${{ matrix.os }}-${{ matrix.python-version }}.json
      - uses: actions/upload-artifact@v2
        with:
          name: result
          path: result-os-${{ matrix.os }}-${{ matrix.python-version }}.json
          if-no-files-found: error

  analyze:
    name: "Analyze results"
    runs-on: "ubuntu-latest"
    needs:
      - distros
      - freebsd
      - mac_win
    steps:
      - name: checkout
        uses: "actions/checkout@v2"
      - name: Download results
        uses: actions/download-artifact@v2
        with:
          name: result
      - name: "Run analyze script"
        run: |
          set -ex
          tools/analyze_results.py | tee analyzed.json
      - uses: actions/upload-artifact@v2
        with:
          name: result
          path: analyzed.json
          if-no-files-found: error
